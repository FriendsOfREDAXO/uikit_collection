name: Build UIkit with REDAXO Theme

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    # Ermöglicht manuelles Auslösen des Workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Setup environment variables
        run: |
          echo "ROOT_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "TEMP_DIR=$GITHUB_WORKSPACE/temp-uikit" >> $GITHUB_ENV
          echo "UIKIT_VERSION=master" >> $GITHUB_ENV
          
      - name: Clone UIkit Repository
        run: |
          echo "Clone UIkit Repository (latest version)..."
          git clone https://github.com/uikit/uikit.git "$TEMP_DIR"
          cd "$TEMP_DIR"
          git checkout "$UIKIT_VERSION"
          
      - name: Get UIkit version
        run: |
          cd "$TEMP_DIR"
          ACTUAL_VERSION=$(node -p "require('./package.json').version")
          echo "ACTUAL_VERSION=$ACTUAL_VERSION" >> $GITHUB_ENV
          echo "Using UIkit Version: $ACTUAL_VERSION"
      
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          cd "$TEMP_DIR"
          npm install
        
      - name: Create custom theme
        run: |
          echo "Creating custom theme..."
          cd "$TEMP_DIR"
          mkdir -p custom/redaxo-theme
          cp -r "$ROOT_DIR/uikit-theme/"* custom/redaxo-theme/
          
          # Create main theme file
          cat > custom/redaxo-theme.less <<EOL
          // Import UIkit core (without default theme)
          @import "../src/less/uikit.less";
          
          // Import redaxo-specific adjustments
          @import "redaxo-theme/_import.less";
          EOL
      
      - name: Compile UIkit with custom theme
        run: |
          echo "Compiling UIkit with custom theme..."
          cd "$TEMP_DIR"
          npm run compile
      
      - name: Copy compiled files
        run: |
          echo "Copying compiled files to assets directory..."
          ASSETS_DIR="${ROOT_DIR}/assets"
          mkdir -p "${ASSETS_DIR}"
          
          # Copy compiled CSS files
          mkdir -p "${ASSETS_DIR}/css"
          cp "$TEMP_DIR/dist/css/uikit"*.css "${ASSETS_DIR}/css/"
          
          # Copy compiled JavaScript files
          mkdir -p "${ASSETS_DIR}/js"
          cp "$TEMP_DIR/dist/js/uikit"*.js "${ASSETS_DIR}/js/"
      
      - name: Clean up
        run: |
          echo "Cleaning up..."
          rm -rf "$TEMP_DIR"
      
      - name: Create release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Creating release artifacts..."
          zip -r uikit_collection.zip . -x "*.git*" -x "temp-uikit/*" -x ".github/*"
      
      - name: Upload release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: uikit_collection
          path: uikit_collection.zip
      
      - name: Commit changes
        # Nur bei Push auf master/main Branch und nicht bei Pull Requests
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assets/
          git commit -m "Update UIkit assets to version $ACTUAL_VERSION" || echo "No changes to commit"
          git push
