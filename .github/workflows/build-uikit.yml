name: Build UIkit with REDAXO Theme

# Nur manuelles Auslösen des Workflows
on:
  workflow_dispatch:
    inputs:
      uikit_branch:
        description: 'UIkit Branch (main oder 3.x, etc.)'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Setup environment variables
        run: |
          echo "ROOT_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "TEMP_DIR=$GITHUB_WORKSPACE/temp-uikit" >> $GITHUB_ENV
          echo "UIKIT_VERSION=${{ github.event.inputs.uikit_branch }}" >> $GITHUB_ENV
          
      - name: Clone UIkit Repository
        run: |
          echo "Clone UIkit Repository (latest version)..."
          git clone https://github.com/uikit/uikit.git "$TEMP_DIR"
          cd "$TEMP_DIR"
          
          # Liste verfügbare Branches
          echo "Verfügbare Branches:"
          git branch -r
          
          # Versuche den angegebenen Branch zu checken
          if git checkout "$UIKIT_VERSION"; then
            echo "Branch $UIKIT_VERSION erfolgreich ausgecheckt"
          else
            echo "Branch $UIKIT_VERSION nicht gefunden, versuche main und dann master..."
            if git checkout main; then
              echo "Branch main erfolgreich ausgecheckt"
              echo "UIKIT_VERSION=main" >> $GITHUB_ENV
            elif git checkout master; then
              echo "Branch master erfolgreich ausgecheckt"
              echo "UIKIT_VERSION=master" >> $GITHUB_ENV
            else
              echo "Weder main noch master gefunden. Verwende default Branch."
              echo "UIKIT_VERSION=default" >> $GITHUB_ENV
            fi
          fi
          
      - name: Get UIkit version
        run: |
          cd "$TEMP_DIR"
          ACTUAL_VERSION=$(node -p "require('./package.json').version")
          echo "ACTUAL_VERSION=$ACTUAL_VERSION" >> $GITHUB_ENV
          echo "Using UIkit Version: $ACTUAL_VERSION"
      
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          cd "$TEMP_DIR"
          npm install
        
      - name: Create custom theme
        run: |
          echo "Creating custom theme..."
          cd "$TEMP_DIR"
          mkdir -p custom/redaxo-theme
          cp -r "$ROOT_DIR/uikit-theme/"* custom/redaxo-theme/
          
          # Create main theme file
          cat > custom/redaxo-theme.less <<EOL
          // Import UIkit core (without default theme)
          @import "../src/less/uikit.less";
          
          // Import redaxo-specific adjustments
          @import "redaxo-theme/_import.less";
          EOL
      
      - name: Compile UIkit with custom theme
        run: |
          echo "Compiling UIkit with custom theme..."
          cd "$TEMP_DIR"
          npm run compile
      
      - name: Copy compiled files
        run: |
          echo "Copying compiled files to assets directory..."
          ASSETS_DIR="${ROOT_DIR}/assets"
          mkdir -p "${ASSETS_DIR}"
          
          # Copy compiled CSS files
          mkdir -p "${ASSETS_DIR}/css"
          cp "$TEMP_DIR/dist/css/uikit"*.css "${ASSETS_DIR}/css/"
          
          # Copy compiled JavaScript files
          mkdir -p "${ASSETS_DIR}/js"
          cp "$TEMP_DIR/dist/js/uikit"*.js "${ASSETS_DIR}/js/"
      
      - name: Clean up
        run: |
          echo "Cleaning up..."
          rm -rf "$TEMP_DIR"
      
      - name: Create artifacts
        run: |
          echo "Creating artifacts..."
          zip -r uikit_collection.zip assets -x "*.git*" -x "temp-uikit/*" -x ".github/*"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: uikit_collection_assets
          path: assets/
          
      - name: Commit info
        run: |
          echo "Um die Änderungen zu committen, führe folgende Befehle lokal aus:"
          echo "--------------------------------------------------------"
          echo "git add assets/"
          echo "git commit -m \"Update UIkit assets to version $ACTUAL_VERSION\""
          echo "git push"
          echo "--------------------------------------------------------"
